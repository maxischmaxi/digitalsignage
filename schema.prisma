generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model Display {
  id          String     @id @default(uuid())
  name        String
  Timeframe   Timeframe? @relation(fields: [timeframeId], references: [id])
  timeframeId String?
}

model Layout {
  id        String      @id @default(uuid())
  name      String
  Timeframe Timeframe[]
}

model Timeframe {
  id        String    @id @default(uuid())
  layout    Layout    @relation(fields: [layoutId], references: [id])
  displays  Display[]
  start     DateTime
  end       DateTime
  displayId String
  layoutId  String
}

model User {
  id          String        @id @default(uuid())
  email       String        @unique
  permissions Permission[]
  orgs        Org[]
  currentOrg  String?
  UsersOnOrgs UsersOnOrgs[]
}

model Org {
  id          String        @id @default(uuid())
  name        String
  users       User[]
  plan        Plan
  icon        String
  UsersOnOrgs UsersOnOrgs[]
}

model UsersOnOrgs {
  user       User     @relation(fields: [userId], references: [id])
  userId     String
  org        Org      @relation(fields: [orgId], references: [id])
  orgId      String
  assignedAt DateTime @default(now())
  assignedBy String

  @@id([userId, orgId])
}

enum Permission {
  SIGNAGE_READ
  DISPLAYS_READ
  LAYOUTS_READ
  TIMELINE_READ
  PLATFORM
  MEDIA
  IMAGES_READ
  VIDEOS_READ
}

enum Plan {
  FREE
  PRO
  ENTERPRISE
}
